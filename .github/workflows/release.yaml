name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: rjq
            asset_name: rjq-linux-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: rjq
            asset_name: rjq-linux-x86_64-musl
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: rjq
            asset_name: rjq-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: rjq
            asset_name: rjq-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: rjq.exe
            asset_name: rjq-windows-x86_64.exe

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install -y musl-tools

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create tarball (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} dist/
          cd dist
          tar -czvf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}

      - name: Create zip (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} dist/
          cd dist
          Compress-Archive -Path ${{ matrix.artifact_name }} -DestinationPath ${{ matrix.asset_name }}.zip

      - name: Upload Release Asset (Unix)
        if: matrix.os != 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ matrix.asset_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ matrix.asset_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}